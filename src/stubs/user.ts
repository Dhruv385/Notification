// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.1
//   protoc               v3.21.12
// source: user.proto

/* eslint-disable */
import { Metadata } from "@grpc/grpc-js";
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "userNotification";

export interface followRequest {
  userId: string;
  userName: string;
  targetId: string;
  type: boolean;
}

export interface privateFollowRequest {
  userId: string;
  userName: string;
  type: boolean;
}

export interface SimpleUserResponse {
  message: string;
  status: string;
}

export const USER_NOTIFICATION_PACKAGE_NAME = "userNotification";

export interface NotifyServiceClient {
  followRequest(request: followRequest, metadata?: Metadata): Observable<SimpleUserResponse>;

  privateFollowRequest(request: privateFollowRequest, metadata?: Metadata): Observable<SimpleUserResponse>;
}

export interface NotifyServiceController {
  followRequest(
    request: followRequest,
    metadata?: Metadata,
  ): Promise<SimpleUserResponse> | Observable<SimpleUserResponse> | SimpleUserResponse;

  privateFollowRequest(
    request: privateFollowRequest,
    metadata?: Metadata,
  ): Promise<SimpleUserResponse> | Observable<SimpleUserResponse> | SimpleUserResponse;
}

export function NotifyServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["followRequest", "privateFollowRequest"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("NotifyService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("NotifyService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const NOTIFY_SERVICE_NAME = "NotifyService";
